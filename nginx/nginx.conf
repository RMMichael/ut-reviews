 # also check out docker container for nginx https://github.com/nginx-proxy/nginx-proxy
 user nginx;
 worker_processes auto;
 worker_rlimit_nofile 2500;
 pid /run/nginx.pid;

error_log  /var/log/nginx/error.log warn;

 events {
   worker_connections  1024;  ## Default: 1024
    # use [ kqueue | rtsig | epoll | /dev/poll | select | poll ] ;
 }
 http {
        include      mime.types;
       	default_type application/octet-stream;

        sendfile    on;
        tcp_nopush  on;
        tcp_nodelay on;
     #   gzip    on;
     #   gzip_buffers     4 8k;
     #   gzip_http_version 1.1;

        keepalive_timeout  65;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;


    server {
        listen      80 default_server;
        listen [::]:80 default_server;
        server_name  www.ut-reviews.com ut-reviews.com;

        # for certbot challenges (tls cert renewal)
        location ^~ /.well-known/acme-challenge/ {
          allow all;
          root  /usr/share/nginx/html;
        }

        # redirect http to https
        location / {
          return 301 https://$host$request_uri;
        }
    }

    server {
        listen [::]:443 ssl ipv6only=on;
        listen 443 ssl;
        server_name www.ut-reviews.com ut-reviews.com;

        # ssl conf from /etc/letsencrypt/options-ssl-nginx.conf
        ssl_session_cache shared:le_nginx_SSL:10m;
        ssl_session_timeout 1440m;
        ssl_session_tickets off;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;
        ssl_dhparam /etc/nginx/dhparam.pem;

        location /api {
            proxy_pass  http://backend:3000;
        }

        location / {
            # This would be the directory where your React app's static files are stored at
            root /usr/share/nginx/html;
            try_files $uri /index.html;
        }
    }

 }

